[{"/home/widoski/alkemy-app/client/src/reportWebVitals.js":"1","/home/widoski/alkemy-app/client/src/App.js":"2","/home/widoski/alkemy-app/client/src/components/Appbar.js":"3","/home/widoski/alkemy-app/client/src/index.js":"4","/home/widoski/alkemy-app/client/src/components/Home.js":"5","/home/widoski/alkemy-app/client/src/conf.js":"6","/home/widoski/alkemy-app/client/src/components/Registers.js":"7","/home/widoski/alkemy-app/client/src/components/CreateRegister.js":"8","/home/widoski/alkemy-app/client/src/theme.js":"9","/home/widoski/alkemy-app/client/src/components/EditRegisters.js":"10","/home/widoski/alkemy-app/client/src/components/Paginate.js":"11","/home/widoski/alkemy-app/client/src/appContext.js":"12"},{"size":362,"mtime":1611364991619,"results":"13","hashOfConfig":"14"},{"size":2663,"mtime":1611764772541,"results":"15","hashOfConfig":"14"},{"size":1817,"mtime":1611500862070,"results":"16","hashOfConfig":"14"},{"size":500,"mtime":1611364991579,"results":"17","hashOfConfig":"14"},{"size":4527,"mtime":1611690454505,"results":"18","hashOfConfig":"14"},{"size":59,"mtime":1611490649781,"results":"19","hashOfConfig":"14"},{"size":7453,"mtime":1611768690729,"results":"20","hashOfConfig":"14"},{"size":2502,"mtime":1611764397275,"results":"21","hashOfConfig":"14"},{"size":250,"mtime":1611487847745,"results":"22","hashOfConfig":"14"},{"size":3174,"mtime":1611768896893,"results":"23","hashOfConfig":"14"},{"size":422,"mtime":1611767494475,"results":"24","hashOfConfig":"14"},{"size":105,"mtime":1611764416591,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1g7t6iy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/widoski/alkemy-app/client/src/reportWebVitals.js",[],["57","58"],"/home/widoski/alkemy-app/client/src/App.js",[],"/home/widoski/alkemy-app/client/src/components/Appbar.js",["59"],"import { useState } from 'react';\nimport { AppBar, Toolbar, Typography, IconButton, Button, Menu, MenuItem } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n\tappbarColor: {\n\t\tbackground: \"#493323\"\n\t},\n\tlink: {\n\t\ttextDecoration: \"none\",\n\t\tcolor: \"black\"\n\t}\n}));\n\nfunction Appbar({ title, children }) {\n\tconst classes = useStyles();\n\n\tconst [anchorEl, setAnchorEl] = useState(null);\n\n\tconst handleOpenMenu = (e) => {\n\t\tsetAnchorEl(e.currentTarget);\n\t};\n\n\tconst handleCloseMenu = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<AppBar className={classes.appbarColor} position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={handleOpenMenu}\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\taria-controls=\"simple-menu\"\n\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\tonClick={handleOpenMenu}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\tid=\"simple-menu\"\n\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\t\t\tonClose={handleCloseMenu}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem><Link className={classes.link} to=\"/\">Home</Link></MenuItem>\n\t\t\t\t\t\t<MenuItem><Link className={classes.link} to=\"/registers\">My registers</Link></MenuItem>\n\t\t\t\t\t\t<MenuItem><Link className={classes.link} to=\"/registers/create\">Create registers</Link></MenuItem>\n\t\t\t\t\t</Menu>\n\t\t\t\t\t<Typography variant=\"button\" className={classes.title}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Button color=\"inherit\">Login</Button>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t{children}\n\t\t</>\n\t);\n}\n\nexport default Appbar;\n","/home/widoski/alkemy-app/client/src/index.js",[],["60","61"],"/home/widoski/alkemy-app/client/src/components/Home.js",["62","63"],"import { useEffect, useState } from 'react';\nimport { Paper, Card, Grid, Table, TableBody, TableCell, TableHead, TableRow, Typography, Toolbar } from '@material-ui/core';\nimport conf from '../conf';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport \"../app.css\";\nimport Appbar from './Appbar';\nimport moment from 'moment';\n\nconst styles = {\n    balanceBox: {\n        margin: 10,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: 100,\n        background: \"#493323\"\n    },\n    registerBox: {\n        margin: 10,\n        height: 100,\n        background: \"#493323\"\n    },\n    title: {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        color: \"white\"\n    },\n    tableTitle: {\n        fontSize: 20,\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        width: \"100%\",\n        textAlign: \"center\"\n    },\n    linkToRegister: {\n        textDecoration: \"none\",\n        color: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100%\",\n        fontWeight: \"bold\"\n    },\n    headRow: {\n        fontWeight: \"bold\",\n    }\n}\n\nexport default function Home() {\n    const [registers, setRegisters] = useState([]);\n    const [balance, setBalance] = useState(0);\n\n    let limit = 10;\n    let offset = 0;\n\n    useEffect(() => {\n        axios.get(`${conf.API_URL}/registers?limit=${limit}&offset=${offset}`)\n            .then(res => {\n                setRegisters(res.data.rows);\n                console.log(res.data.rows)\n                let income = 0;\n                let outcome = 0;\n\n                res.data.rows.forEach(r => {\n                    if (r.type === \"income\") {\n                        income = income + parseInt(r.amount);\n                    }\n                    if (r.type === \"outcome\") {\n                        outcome = outcome + parseInt(r.amount);\n                    }\n                });\n                const balance = income - outcome;\n                setBalance(balance);\n            });\n    }, [])\n\n    return (\n        <Grid container>\n            <Appbar title=\"Welcome\">\n                <Grid item xs={12} xl={6}>\n                    <Toolbar>\n                        <Typography variant=\"button\" style={styles.tableTitle}>Last registers</Typography>\n                    </Toolbar>\n                    <Table style={styles.table} component={Paper}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell style={styles.headRow}>Type</TableCell>\n                                <TableCell style={styles.headRow}>Concept</TableCell>\n                                <TableCell style={styles.headRow}>Date</TableCell>\n                                <TableCell style={styles.headRow}>Amount</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                registers.map(r => (\n                                    <TableRow key={r.id}>\n                                        <TableCell>{r.type}</TableCell>\n                                        <TableCell>{r.concept}</TableCell>\n                                        <TableCell>{moment(r.createdAt).format(\"ll\")}</TableCell>\n                                        <TableCell>{`$${r.amount}`}</TableCell>\n                                    </TableRow>\n                                ))\n                            }\n                        </TableBody>\n                    </Table>\n                </Grid>\n                <Grid container item xs={12}>\n                    <Grid item xs={6}>\n                        <Card style={styles.balanceBox}>\n                            <Typography variant=\"button\" style={styles.title}>Balance</Typography>\n                            <Typography variant=\"button\" style={styles.title}>{`$${balance}`}</Typography>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Card style={styles.registerBox}>\n                            <Typography variant=\"button\">\n                                <Link className=\"linkToRegister\" style={styles.linkToRegister} to=\"/registers\">My registers</Link>\n                            </Typography>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Appbar>\n        </Grid>\n    )\n}\n",["64","65"],"/home/widoski/alkemy-app/client/src/conf.js",["66"],"export default {\n    API_URL: \"http://localhost:5000/api\"\n}","/home/widoski/alkemy-app/client/src/components/Registers.js",["67","68"],"/home/widoski/alkemy-app/client/src/components/CreateRegister.js",[],"/home/widoski/alkemy-app/client/src/theme.js",[],["69","70"],"/home/widoski/alkemy-app/client/src/components/EditRegisters.js",["71"],"/home/widoski/alkemy-app/client/src/components/Paginate.js",[],"/home/widoski/alkemy-app/client/src/appContext.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":51,"column":7,"nodeType":"78","endLine":51,"endColumn":31},{"ruleId":"72","replacedBy":"79"},{"ruleId":"74","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":35,"column":9,"nodeType":"83","messageId":"84","endLine":35,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":77,"column":8,"nodeType":"87","endLine":77,"endColumn":10,"suggestions":"88"},{"ruleId":"72","replacedBy":"89"},{"ruleId":"74","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":1,"nodeType":"93","endLine":3,"endColumn":2},{"ruleId":"85","severity":1,"message":"94","line":57,"column":7,"nodeType":"87","endLine":57,"endColumn":9,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":60,"column":16,"nodeType":"98","messageId":"84","endLine":60,"endColumn":18},{"ruleId":"72","replacedBy":"99"},{"ruleId":"74","replacedBy":"100"},{"ruleId":"85","severity":1,"message":"101","line":46,"column":8,"nodeType":"87","endLine":46,"endColumn":10,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["103"],["104"],"no-dupe-keys","Duplicate key 'textAlign'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'limit' and 'offset'. Either include them or remove the dependency array.","ArrayExpression",["105"],["103"],["104"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'fetchRegisters'. Either include it or remove the dependency array.",["106"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["103"],["104"],"React Hook useEffect has missing dependencies: 'id' and 'updateRegister'. Either include them or remove the dependency array. You can also do a functional update 'setUpdateRegister(u => ...)' if you only need 'updateRegister' in the 'setUpdateRegister' call.",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [limit, offset]",{"range":"114","text":"115"},"Update the dependencies array to be: [fetchRegisters]",{"range":"116","text":"117"},"Update the dependencies array to be: [id, updateRegister]",{"range":"118","text":"119"},[2109,2111],"[limit, offset]",[1324,1326],"[fetchRegisters]",[1201,1203],"[id, updateRegister]"]