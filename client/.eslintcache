[{"/home/widoski/alkemy-app/client/src/reportWebVitals.js":"1","/home/widoski/alkemy-app/client/src/App.js":"2","/home/widoski/alkemy-app/client/src/components/Appbar.js":"3","/home/widoski/alkemy-app/client/src/index.js":"4","/home/widoski/alkemy-app/client/src/components/Home.js":"5","/home/widoski/alkemy-app/client/src/conf.js":"6","/home/widoski/alkemy-app/client/src/components/Registers.js":"7","/home/widoski/alkemy-app/client/src/components/CreateRegister.js":"8","/home/widoski/alkemy-app/client/src/theme.js":"9","/home/widoski/alkemy-app/client/src/components/EditRegisters.js":"10"},{"size":362,"mtime":1611364991619,"results":"11","hashOfConfig":"12"},{"size":883,"mtime":1611495403837,"results":"13","hashOfConfig":"12"},{"size":1817,"mtime":1611500862070,"results":"14","hashOfConfig":"12"},{"size":500,"mtime":1611364991579,"results":"15","hashOfConfig":"12"},{"size":4527,"mtime":1611690454505,"results":"16","hashOfConfig":"12"},{"size":59,"mtime":1611490649781,"results":"17","hashOfConfig":"12"},{"size":6088,"mtime":1611503190576,"results":"18","hashOfConfig":"12"},{"size":4053,"mtime":1611495970423,"results":"19","hashOfConfig":"12"},{"size":250,"mtime":1611487847745,"results":"20","hashOfConfig":"12"},{"size":2979,"mtime":1611502063428,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1g7t6iy",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},"/home/widoski/alkemy-app/client/src/reportWebVitals.js",[],["49","50"],"/home/widoski/alkemy-app/client/src/App.js",[],"/home/widoski/alkemy-app/client/src/components/Appbar.js",["51"],"import { useState } from 'react';\nimport { AppBar, Toolbar, Typography, IconButton, Button, Menu, MenuItem } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n\tappbarColor: {\n\t\tbackground: \"#493323\"\n\t},\n\tlink: {\n\t\ttextDecoration: \"none\",\n\t\tcolor: \"black\"\n\t}\n}));\n\nfunction Appbar({ title, children }) {\n\tconst classes = useStyles();\n\n\tconst [anchorEl, setAnchorEl] = useState(null);\n\n\tconst handleOpenMenu = (e) => {\n\t\tsetAnchorEl(e.currentTarget);\n\t};\n\n\tconst handleCloseMenu = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<AppBar className={classes.appbarColor} position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={handleOpenMenu}\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\taria-controls=\"simple-menu\"\n\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\tonClick={handleOpenMenu}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\tid=\"simple-menu\"\n\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\t\t\tonClose={handleCloseMenu}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem><Link className={classes.link} to=\"/\">Home</Link></MenuItem>\n\t\t\t\t\t\t<MenuItem><Link className={classes.link} to=\"/registers\">My registers</Link></MenuItem>\n\t\t\t\t\t\t<MenuItem><Link className={classes.link} to=\"/registers/create\">Create registers</Link></MenuItem>\n\t\t\t\t\t</Menu>\n\t\t\t\t\t<Typography variant=\"button\" className={classes.title}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Button color=\"inherit\">Login</Button>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t{children}\n\t\t</>\n\t);\n}\n\nexport default Appbar;\n","/home/widoski/alkemy-app/client/src/index.js",[],["52","53"],"/home/widoski/alkemy-app/client/src/components/Home.js",["54","55"],"/home/widoski/alkemy-app/client/src/conf.js",["56"],"export default {\n    API_URL: \"http://localhost:5000/api\"\n}","/home/widoski/alkemy-app/client/src/components/Registers.js",[],["57","58"],"/home/widoski/alkemy-app/client/src/components/CreateRegister.js",[],["59","60"],"/home/widoski/alkemy-app/client/src/theme.js",[],"/home/widoski/alkemy-app/client/src/components/EditRegisters.js",["61","62"],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Paper, TextField, Select, MenuItem, Snackbar, Grid, InputLabel } from '@material-ui/core';\nimport Appbar from './Appbar';\nimport axios from \"axios\";\nimport conf from '../conf';\n\nconst styles = {\n    formContainer: {\n        margin: 20,\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    fields: {\n        margin: 10\n    }\n}\n\nexport default function EditRegisters(props) {\n    const { id } = useParams();\n\n    const [updateRegister, setUpdateRegister] = useState({\n        concept: \"\",\n        amount: \"\",\n        type: \"\"\n    });\n\n\n    useEffect(() => {\n        axios.get(`${conf.API_URL}/registers/${id}`)\n            .then(res => {\n                const register = res.data;\n                console.log(register)\n\n                setUpdateRegister({\n                    ...updateRegister,\n                    concept: register.concept,\n                    amount: register.amount,\n                    type: register.type\n                });\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n\n        setUpdateRegister({\n            ...updateRegister,\n            [name]: value\n        });\n    }\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n\n        axios.put(`${conf.API_URL}/registers/${id}`, updateRegister)\n            .then(res => {\n                console.log(res.data);\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <Grid>\n            <Appbar title=\"Edit register\">\n                <Paper style={styles.formContainer}>\n                    <form onSubmit={onSubmitForm} style={styles.form}>\n                        <TextField style={styles.fields} name=\"concept\" label=\"Concept\" onChange={onChangeHandler} value={updateRegister.concept} />\n                        <TextField style={styles.fields} name=\"amount\" label=\"Amount\" onChange={onChangeHandler} value={updateRegister.amount} />\n                        <InputLabel style={styles.fields} id=\"type\">Operation</InputLabel>\n                        <Select\n                            name=\"type\"\n                            labelId=\"type\"\n                            onChange={onChangeHandler}\n                            value={updateRegister.type}\n                            style={styles.fields}\n                            disabled\n                        >\n                            <MenuItem disabled>Type</MenuItem>\n                            <MenuItem value={\"income\"}>Income</MenuItem>\n                            <MenuItem value={\"outcome\"}>Outcome</MenuItem>\n                        </Select>\n                        <Button fullWidth type=\"submit\" color=\"primary\" variant=\"contained\">Create</Button>\n                    </form>\n                </Paper>\n            </Appbar>\n        </Grid>\n    )\n}\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":51,"column":7,"nodeType":"69","endLine":51,"endColumn":31},{"ruleId":"63","replacedBy":"70"},{"ruleId":"65","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":35,"column":9,"nodeType":"74","messageId":"75","endLine":35,"endColumn":18},{"ruleId":"76","severity":1,"message":"77","line":77,"column":8,"nodeType":"78","endLine":77,"endColumn":10,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":1,"nodeType":"82","endLine":3,"endColumn":2},{"ruleId":"63","replacedBy":"83"},{"ruleId":"65","replacedBy":"84"},{"ruleId":"63","replacedBy":"85"},{"ruleId":"65","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":54,"nodeType":"89","messageId":"90","endLine":3,"endColumn":62},{"ruleId":"76","severity":1,"message":"91","line":45,"column":8,"nodeType":"78","endLine":45,"endColumn":10,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["93"],["94"],"no-dupe-keys","Duplicate key 'textAlign'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'limit' and 'offset'. Either include them or remove the dependency array.","ArrayExpression",["95"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["93"],["94"],["93"],["94"],"no-unused-vars","'Snackbar' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'id' and 'updateRegister'. Either include them or remove the dependency array. You can also do a functional update 'setUpdateRegister(u => ...)' if you only need 'updateRegister' in the 'setUpdateRegister' call.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [limit, offset]",{"range":"101","text":"102"},"Update the dependencies array to be: [id, updateRegister]",{"range":"103","text":"104"},[2109,2111],"[limit, offset]",[1153,1155],"[id, updateRegister]"]